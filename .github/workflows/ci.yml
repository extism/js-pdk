name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: linux
            os: ubuntu-latest
          # Re-enable once we can build on Windows again
          # - name: windows
          #   os: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          target: wasm32-wasi
          default: true

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.x'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Extism CLI
        run: |          
          go install github.com/extism/cli/extism@latest
          extism --version

      - name: Update deps (Linux)
        run: |
          ./install-wasi-sdk.sh
          cd /tmp
          # get just wasm-merge and wasm-opt
          curl -L https://github.com/WebAssembly/binaryen/releases/download/version_116/binaryen-version_116-x86_64-linux.tar.gz > binaryen.tar.gz
          tar xvzf binaryen.tar.gz
          sudo cp binaryen-version_116/bin/wasm-merge /usr/local/bin
          sudo cp binaryen-version_116/bin/wasm-opt /usr/local/bin
        if: runner.os != 'Windows'

      - name: Update deps (Windows)
        run: |
          powershell -executionpolicy bypass -File .\install-wasi-sdk.ps1
          go install github.com/extism/cli/extism@latest
          Remove-Item -Recurse -Path "c:\Program files\Binaryen" -Force -ErrorAction SilentlyContinue > $null 2>&1
          New-Item -ItemType Directory -Force -Path "c:\Program files\Binaryen" -ErrorAction Stop > $null 2>&1
          Invoke-WebRequest -Uri "https://github.com/WebAssembly/binaryen/releases/download/version_116/binaryen-version_116-x86_64-windows.tar.gz" -OutFile "$env:TMP\binaryen-version_116-x86_64-windows.tar.gz"
          7z x "$env:TMP\binaryen-version_116-x86_64-windows.tar.gz" -o"$env:TMP\" >$null  2>&1
          7z x -ttar "$env:TMP\binaryen-version_116-x86_64-windows.tar" -o"$env:TMP\" >$null  2>&1
          Copy-Item -Path "$env:TMP\binaryen-version_116\bin\wasm-opt.exe" -Destination "c:\Program files\Binaryen" -ErrorAction Stop > $null 2>&1
          Copy-Item -Path "$env:TMP\binaryen-version_116\bin\wasm-merge.exe" -Destination "c:\Program files\Binaryen" -ErrorAction Stop > $null 2>&1
        if: runner.os == 'Windows'

      - name: Run Tests (Linux)
        env:
          QUICKJS_WASM_SYS_WASI_SDK_PATH: "${{ github.workspace }}/wasi-sdk"
        run: |
          make
          make test
        if: runner.os != 'Windows'

      - name: Run Tests (Windows)
        env:
          QUICKJS_WASM_SYS_WASI_SDK_PATH: "${{ github.workspace }}/wasi-sdk"
        run: |
          set PATH="c:\Program files\Binaryen\";%PATH%
          make
          make test
        shell: cmd
        if: runner.os == 'Windows'
